import("QuickTravelHooks.flow");
import("QuickTravelPlus.msg");
int CurFldMajor;
int CurFldMinor;

void QuickTravelPlus() {
    CurFldMajor = FLD_GET_MAJOR();
    CurFldMinor = FLD_GET_MINOR();
    
    // TODO: Some of these fields normally hide the option
    // to travel to specific locations if the story mandates
    // only going to one place within the area; we'll need to figure
    // out how to properly account for this so that the player doesn't
    // potentially put themself somewhere they aren't supposed to be, which
    // in the worst case could lead to softlocks/broken save files

    if (CurFldMajor == 6) { // Gekkoukan High
        schoolQT();
    }
    else if (CurFldMajor == 7) { // Dorm
        dormQT();
    }
    else if (CurFldMajor == 8) { // Paulownia Mall
        mallQT();
    }
    else if (CurFldMajor == 9) { // Strip Mall
        stripmallQT();
    }
    else if (CurFldMajor == 10) { // Port Island Station
        stationQT();
    }
    else if (CurFldMajor == 12) { // Shrine
        shrineQT();
    }
    else if (CurFldMajor == 14) { // Godaiga
        godaigaQT();
    }
    else if (CurFldMajor == 15) { // Tartarus
        tartarusQT();
    }
}

void dormQT() {
    int dormMask = 0;
    if (!BIT_CHK(3592)) {
        // Hide Command Room if it hasn't been unlocked,
        // it's March, or you're already in there
        if (!BIT_CHK(21) || (FUNCTION_0030() == 3) || (CurFldMinor == 6)) {
            dormMask += 0x10; // 0b0001_0000
        }
        switch (CurFldMinor) {
            case 2:
                dormMask += 1;
                break;
            case 3:
                dormMask += 2;
                break;
            case 4:
                dormMask += 4; // 0b0100
                break;
            case 5:
                dormMask += 8; // 0b1000
                break;
            case 9:
                dormMask += 0x40; // 0b0100_0000
                break;
            case 19:
            case 20:
                dormMask += 0x20; //0b0010_0000
                break;
        }
    }
    else { // Player has to go to 4F to learn abt SEES
        dormMask += 119; // 0b0111_0111
    }
    SEL_DEFKEY(PadButton.Circle, 9);
    int dormSel = MSG_SELECT(QuickTravelPlus_Text, DORMITORY_QTSEL, dormMask);
    if (dormSel <= 4) {
        FADE(FadeEffects.CircleWipe, 20);
        FUNCTION_000F();
        switch (dormSel) {
            case 0:
                CALL_FIELD(7, 2, 1, 0);
                return;
            case 1:
                CALL_FIELD(7, 3, 0, 0);
                return;
            case 2:
                CALL_FIELD(7, 4, 0, 0);
                return;
            case 3:
                if (BIT_CHK(3592)) {
                    BIT_OFF(3592);
                    CALL_EVENT(129, 1);
                    EVT_FUNCTION_0004(1);
                    BIT_ON(21);
                    CALL_DARK_HOUR();
                    FCL_FUNCTION_0017();
                    CALL_EVENT(130, 1);
                    BIT_ON(22);
                    BIT_ON(2562);
                    FCL_FUNCTION_0018();
                    NEXT_TIME();
                }
                else {
                    CALL_FIELD(7, 5, 0, 0);
                }
                return;
            case 4:
                CALL_FIELD(7, 6, 0, 0);
                return;
        }
    }
    else if (dormSel == 5) {
        call_midnight_myroom_hook();
    }
    else if (dormSel == 6) {
        myroom_mybed_hook();
    }
    else if (dormSel == 7) {
        leaveType = 1;
        goout_dormitory_hook();
    }
    else if (dormSel == 8) {
        ElseWhere();
    }
}

void stripmallQT()
{
}

void stationQT()
{
}

void shrineQT()
{
}

void godaigaQT()
{
}

void tartarusQT()
{
}

void mallQT()
{
}

void schoolQT() {
    int schoolMaskP1 = 1264;
    int schoolMaskP2 = 527;

    switch (CurFldMinor) {
        case 1:
            schoolMaskP1 = schoolMaskP1 + 1;
            break;
        case 2:
            break;
        case 3:
            schoolMaskP2 = schoolMaskP2 + 64;
            break;
        case 4:
            schoolMaskP2 = schoolMaskP2 + 32;
            break;
        case 5:
            schoolMaskP2 = schoolMaskP2 + 128;
            break;
        case 7:
            schoolMaskP1 = schoolMaskP1 + 2;
            break;
        case 11:
            schoolMaskP1 = schoolMaskP1 + 4;
            break;
        case 16:
            schoolMaskP1 = schoolMaskP1 + 8;
            break;
        case 20:
            schoolMaskP2 = schoolMaskP2 + 16;
            break;
    }
    schoolBack:
    SEL_DEFKEY(PadButton.Circle, 12);
    int school = MSG_SELECT(QuickTravelPlus_Text, SCHOOL_QTSEL, schoolMaskP1);

    switch (school) {
        case 0:
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(6, 1, 1, 0);
            break;
        case 1:
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(6, 7, 1, 0);
            break;
        case 2:
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(6, 11, 1, 0);
            break;
        case 3:
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(6, 0x10, 1, 0);
            break;
        case 4:
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(6, 20, 0, 0);
            break;
        case 5:
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(6, 4, 2, 0);
            break;
        case 6:
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(6, 3, 0, 0);
            break;
        case 7:
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(6, 5, 0, 0);
            break;
        case 8:
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(6, 2, 1, 0);
            break;
        case 9:
            SEL_DEFKEY(PadButton.Circle, 12);
            int school2 = MSG_SELECT(QuickTravelPlus_Text, SCHOOL_QTSEL, schoolMaskP2);
            switch (school2) {
                case 0:
                    FADE(FadeEffects.CircleWipe, 20);
                    FUNCTION_000F();
                    CALL_FIELD(6, 1, 1, 0);
                    break;
                case 1:
                    FADE(FadeEffects.CircleWipe, 20);
                    FUNCTION_000F();
                    CALL_FIELD(6, 7, 1, 0);
                    break;
                case 2:
                    FADE(FadeEffects.CircleWipe, 20);
                    FUNCTION_000F();
                    CALL_FIELD(6, 11, 1, 0);
                    break;
                case 3:
                    FADE(FadeEffects.CircleWipe, 20);
                    FUNCTION_000F();
                    CALL_FIELD(6, 0x10, 1, 0);
                    break;
                case 4:
                    FADE(FadeEffects.CircleWipe, 20);
                    FUNCTION_000F();
                    CALL_FIELD(6, 20, 0, 0);
                    break;
                case 5:
                    FADE(FadeEffects.CircleWipe, 20);
                    FUNCTION_000F();
                    CALL_FIELD(6, 4, 2, 0);
                    break;
                case 6:
                    FADE(FadeEffects.CircleWipe, 20);
                    FUNCTION_000F();
                    CALL_FIELD(6, 3, 0, 0);
                    break;
                case 7:
                    FADE(FadeEffects.CircleWipe, 20);
                    FUNCTION_000F();
                    CALL_FIELD(6, 5, 0, 0);
                    break;
                case 8:
                    FADE(FadeEffects.CircleWipe, 20);
                    FUNCTION_000F();
                    CALL_FIELD(6, 2, 1, 0);
                    break;
                case 9:
                    break;
                case 10:
                    goto schoolBack;
                case 11:
                    ElseWhere();
                    break;
                case 12:
                    MSG_WND_CLS();
                    return;
            }
        case 10:
            break;
        case 11: 
                ElseWhere();
                break;
        case 12:
                MSG_WND_CLS();
                return;
    }
}

void ElseWhere() {
    int dayTime = FUNCTION_0033();

    int mapMask = 0;

    switch (CurFldMajor) {
        case 0: // School
            mapMask = mapMask + 1;
            break;
        case 1: // Dorm
            mapMask = mapMask + 2;
            break;
        case 2: // Paulownia Mall
            mapMask = mapMask + 4;
            break;
        case 3: // Strip Mall
            mapMask = mapMask + 8;
            break;
        case 4: // Port Island Station
            mapMask = mapMask + 16;
            break;
        case 5: // Shrine
            mapMask = mapMask + 32;
            break;
    }

    switch (dayTime) {
        case 0:
            mapMask = mapMask + 0;
            break;
        case 3:
            mapMask = mapMask + 1;
            break;
        case 5:
            mapMask = mapMask + 58;
            break;
    }

    SEL_DEFKEY(PadButton.Circle, 6);
    int map = MSG_SELECT(QuickTravelPlus_Text, MAP_QTSEL, mapMask);

    switch (map) {
        case 0: // School
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(6, 2, 1, 0);
            break;
        case 1: // Dorm
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(7, 9, 1, 0);
            break;
        case 2: // Paulownia Mall
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(8, 1, 1, 0);
            break;
        case 3: // Strip Mall
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(9, 1, 1, 0);
            break;
        case 4: // Port Island Station
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(10, 1, 1, 0);
            break;
        case 5: // Shrine
            FADE(FadeEffects.CircleWipe, 20);
            FUNCTION_000F();
            CALL_FIELD(12, 1, 1, 0);
            break;
        case 6: // Cancel
            MSG_WND_CLS();
            return;
    }
}
